name: MSTest and Reports

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'  # Replace with your desired .NET version

      - name: Restore dependencies
        run: dotnet restore WebscraperChatBot

      - name: Build solution
        run: dotnet build WebscraperChatBot --configuration Release

  test:
    runs-on: windows-latest

    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'  # Replace with your desired .NET version

      - name: Run tests and collect coverage
        run: |
          dotnet test WebscraperChatBot --configuration Release --logger "trx;LogFileName=testresults.trx" --collect "Code Coverage"

      - name: Trx to junit
        run: |
          dotnet tool install -g trx2junit
          $trxFiles = Get-ChildItem -Recurse -Filter *.trx | Select-Object -ExpandProperty FullName
          trx2junit $trxFiles --output $Junit-Location
        env: 
          Junit-Location: results

      - name: Merge junit result
        run: |
          npm install -g junit-report-merger
          jrm combined.xml *.xml

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    
        with:
          name: Show Test Report         
          path: combined.xml   
          reporter: jest-Junit        

      - name: Generate coverage report
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool 
          reportgenerator "-reports:**/coverage.cobertura.xml" "-targetdir:coverage" "-reporttypes:HtmlInline_AzurePipelines"
        env:
          ReportGenerator_Version: ${{ env.ReportGenerator_Version }}

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: '**/coverage.cobertura.xml'
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
